import os
import socket
from threading import Thread
from flask import Flask
from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext

# =====================
# Flask keep alive (Render/Replit “Ø—à—ñ–Ω)
# =====================
app = Flask(__name__)

@app.route('/')
def home():
    return "‚úÖ Bot is running!"

def run_flask():
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)

# =====================
# –ú”ô–ª—ñ–º–µ—Ç—Ç–µ—Ä
# =====================
servers = {}  # {ip: {"name": "Server1", "record": 0}}
user_messages = {}  # {user_id: count}
user_nicks = {}  # {user_id: "–ë–µ–∫–∞—Ä—ã—Å"}

# =====================
# Minecraft –ø–∏–Ω–≥ (“õ–∞—Ä–∞–ø–∞–π—ã–º —ç–º—É–ª—è—Ü–∏—è)
# =====================
def ping_server(ip, port=25565):
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(3)
        sock.connect((ip, port))
        sock.close()
        import random
        online = random.randint(1, 20)
        max_players = 50
        version = "1.20.x"
        return online, max_players, version
    except:
        return 0, 0, "–ë–µ–ª–≥—ñ—Å—ñ–∑"

# =====================
# Telegram BOT
# =====================
def start_bot():
    TOKEN = os.environ["BOT_TOKEN"]  # –ë–æ—Ç —Ç–æ–∫–µ–Ω
    ADMIN_ID = int(os.environ["ADMIN_ID"])  # –¢–µ–∫ —Å–µ–Ω “õ–æ—Å—ã–ø/”©—à—ñ—Ä–µ—Å—ñ“£

    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    # /start
    def start(update: Update, context: CallbackContext):
        update.message.reply_text("–°”ô–ª–µ–º üëã –ú–µ–Ω Minecraft —Å–µ—Ä–≤–µ—Ä–ª–µ—Ä—ñ–Ω —Ç–µ–∫—Å–µ—Ä–µ—Ç—ñ–Ω –±–æ—Ç–ø—ã–Ω!")

    # /add (—Ç–µ–∫ –∞–¥–º–∏–Ω)
    def add_server(update: Update, context: CallbackContext):
        if update.effective_user.id != ADMIN_ID:
            update.message.reply_text("‚õî –†“±“õ—Å–∞—Ç –∂–æ“õ!")
            return
        if not context.args:
            update.message.reply_text("“ö–æ–ª–¥–∞–Ω—É: /add <ip>")
            return
        ip = context.args[0]
        if ip in servers:
            update.message.reply_text("–ë“±–ª —Å–µ—Ä–≤–µ—Ä –±“±—Ä—ã–Ω–Ω–∞–Ω –±–∞—Ä ‚úÖ")
        else:
            servers[ip] = {"name": ip, "record": 0}
            update.message.reply_text(f"‚úÖ –°–µ—Ä–≤–µ—Ä “õ–æ—Å—ã–ª–¥—ã: {ip}")

    # /nick (—Å–µ—Ä–≤–µ—Ä–≥–µ –∞—Ç–∞—É –±–µ—Ä—É)
    def nick_server(update: Update, context: CallbackContext):
        if len(context.args) < 2:
            update.message.reply_text("“ö–æ–ª–¥–∞–Ω—É: /nick <ip> <–ê—Ç–∞—É—ã>")
            return
        ip = context.args[0]
        name = " ".join(context.args[1:])
        if ip not in servers:
            update.message.reply_text("–ë“±–ª IP —Ç–∞–±—ã–ª–º–∞–¥—ã ‚ùå")
        else:
            servers[ip]["name"] = name
            update.message.reply_text(f"‚úÖ {ip} “Ø—à—ñ–Ω –∂–∞“£–∞ –∞—Ç–∞—É “õ–æ–π—ã–ª–¥—ã: {name}")

    # /remove (—Ç–µ–∫ –∞–¥–º–∏–Ω)
    def remove_server(update: Update, context: CallbackContext):
        if update.effective_user.id != ADMIN_ID:
            update.message.reply_text("‚õî –†“±“õ—Å–∞—Ç –∂–æ“õ!")
            return
        if not context.args:
            update.message.reply_text("“ö–æ–ª–¥–∞–Ω—É: /remove <ip>")
            return
        ip = context.args[0]
        if ip in servers:
            del servers[ip]
            update.message.reply_text(f"üóë –°–µ—Ä–≤–µ—Ä ”©—à—ñ—Ä—ñ–ª–¥—ñ: {ip}")
        else:
            update.message.reply_text("‚ùå –ú“±–Ω–¥–∞–π —Å–µ—Ä–≤–µ—Ä –∂–æ“õ")

    # /check (—Å–µ—Ä–≤–µ—Ä —Ç–µ–∫—Å–µ—Ä—É)
    def check_server(update: Update, context: CallbackContext):
        if not context.args:
            update.message.reply_text("“ö–æ–ª–¥–∞–Ω—É: /check <ip>")
            return
        ip = context.args[0]
        if ip not in servers:
            update.message.reply_text("–ë“±–ª —Å–µ—Ä–≤–µ—Ä —Ç—ñ–∑—ñ–º–¥–µ –∂–æ“õ ‚ùå")
            return
        name = servers[ip]["name"]
        online, max_players, version = ping_server(ip)
        if online > servers[ip]["record"]:
            servers[ip]["record"] = online

        if online > 0:
            text = (
                f"–°–µ—Ä–≤–µ—Ä –∞—Ç–∞—É—ãüè∑Ô∏è: {name}\n\n"
                f"–°–µ—Ä–≤–µ—Ä –∫“Ø–π—ñüñ•Ô∏è: –û–Ω–ª–∞–π–Ω ‚úÖ\n\n"
                f"–°–µ—Ä–≤–µ—Ä–¥–µ–≥—ñ –æ–π—ã–Ω—à—ã —Å–∞–Ω—ãüë•: {online}/{max_players}\n\n"
                f"–°–µ—Ä–≤–µ—Ä–¥–µ–≥—ñ —Ä–µ–∫–æ—Ä–¥ —Å–∞–Ω—ãüèÜ: {servers[ip]['record']}\n\n"
                f"–ê–π–ø–∏ —Å–µ—Ä–≤–µ—Ä–∞üåê: {ip}\n\n"
                f"–í–µ—Ä—Å–∏—è Minecraft‚öôÔ∏è: {version}\n\n"
                f"–ê–≤—Ç–æ—Ä –±–æ—Ç–∞ü§ñ: @BlodyPc"
            )
        else:
            text = (
                f"–°–µ—Ä–≤–µ—Ä –∞—Ç–∞—É—ãüè∑Ô∏è: {name}\n\n"
                f"–°–µ—Ä–≤–µ—Ä –∫“Ø–π—ñüñ•Ô∏è: –û—Ñ–ª–∞–π–Ω ‚ùå\n\n"
                f"–°–µ—Ä–≤–µ—Ä–¥–µ–≥—ñ –æ–π—ã–Ω—à—ã —Å–∞–Ω—ãüë•: 0/0\n\n"
                f"–°–µ—Ä–≤–µ—Ä–¥–µ–≥—ñ —Ä–µ–∫–æ—Ä–¥ —Å–∞–Ω—ãüèÜ: {servers[ip]['record']}\n\n"
                f"–ê–π–ø–∏ —Å–µ—Ä–≤–µ—Ä–∞üåê: {ip}\n\n"
                f"–í–µ—Ä—Å–∏—è Minecraft‚öôÔ∏è: –ë–µ–ª–≥—ñ—Å—ñ–∑\n\n"
                f"–ê–≤—Ç–æ—Ä –±–æ—Ç–∞ü§ñ: @BlodyPc"
            )
        update.message.reply_text(text)

    # /list (—á–∞—Ç—Ç–∞“ì—ã “õ–æ–ª–¥–∞–Ω—É—à—ã–ª–∞—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞—Å—ã)
    def list_users(update: Update, context: CallbackContext):
        if not user_messages:
            update.message.reply_text("”ò–∑—ñ—Ä–≥–µ –µ—à–∫—ñ–º –∂–∞–∑–±–∞“ì–∞–Ω ‚úâÔ∏è")
            return
        text = "üìä –ß–∞—Ç—Ç–∞“ì—ã –±–µ–ª—Å–µ–Ω–¥—ñ–ª—ñ–∫:\n\n"
        for user_id, count in user_messages.items():
            nick = user_nicks.get(user_id, "–ê–Ω—ã“õ—Ç–∞–ª–º–∞“ì–∞–Ω")
            text += f"üë§ {nick} ‚Äî {count} —Ö–∞–±–∞—Ä–ª–∞–º–∞\n"
        update.message.reply_text(text)

    # +–Ω–∏–∫ (“õ–æ–ª–¥–∞–Ω—É—à—ã“ì–∞ –Ω–∏–∫ –æ—Ä–Ω–∞—Ç—É)
    def set_nick(update: Update, context: CallbackContext):
        if not context.args:
            update.message.reply_text("“ö–æ–ª–¥–∞–Ω—É: +–Ω–∏–∫ <–∞—Ç—ã>")
            return
        nick = " ".join(context.args)
        user_id = update.effective_user.id
        user_nicks[user_id] = nick
        update.message.reply_text(f"‚úÖ –°—ñ–∑–¥—ñ“£ –Ω–∏–∫–Ω–µ–π–º—ñ“£—ñ–∑ “õ–æ—Å—ã–ª–¥—ã: {nick}")

    # –•–∞–±–∞—Ä–ª–∞–º–∞–ª–∞—Ä–¥—ã —Å–∞–Ω–∞—É
    def count_messages(update: Update, context: CallbackContext):
        user_id = update.effective_user.id
        user_messages[user_id] = user_messages.get(user_id, 0) + 1

    # Handler-–ª–µ—Ä
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("add", add_server))
    dp.add_handler(CommandHandler("nick", nick_server))
    dp.add_handler(CommandHandler("remove", remove_server))
    dp.add_handler(CommandHandler("check", check_server))
    dp.add_handler(CommandHandler("list", list_users))
    dp.add_handler(CommandHandler("–Ω–∏–∫", set_nick))  # +–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∞—Å—ã
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, count_messages))

    updater.start_polling()
    updater.idle()

# =====================
# –ë–∞—Å—Ç–∞—É
# =====================
if __name__ == "__main__":
    Thread(target=run_flask).start()
    start_bot()
